#pragma once

#include "../Collider/Collider.h"

const int blockSize{ 96 };		//ステージ一マスのサイズ
const int mapHeight{ 11 };		//ステージの縦列
const int mapwidth{ 19 };		//ステージの横列
const int mapOffSetX{ 48 };		//ステージのオフセットX	48
const int mapOffSetY{ 12 };		//ステージのオフセットY	12

class Stage
{
public:
	void Draw();	//描画処理

	void GetRandomStage();

	int GetStagePosX();
	int GetStagePosY();

	//ステージとの当たり判定
	bool OnCollisionStageToRect(int min_x_, int max_x_, int min_y_, int max_y_,
		float vec_x_, float vec_y_, float* side_x_, float* side_y_);
	bool OnCollisionStageAndRect(RectCollider rect_, float vec_x_, float vec_y_,
		float* side_x_, float* side_y_);

private:
	int posX{ 0 };
	int posY{ 0 };
	int getPosX{ 0 };
	int getPosY{ 0 };
	int stageArrange[mapHeight][mapwidth]	//ステージの配置
	{
		/*
			0：移動可能マス
			1：壁(白血球生成可能マス)
			2：壁(白血球がいるマス)
			3：外壁
		*/
		{ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},		//1列
		{ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},		//2列
		{ 3, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3},		//3列
		{ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},		//4列
		{ 3, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3},		//5列
		{ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},		//6列
		{ 3, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3},		//7列
		{ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},		//8列
		{ 3, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3},		//9列
		{ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3},		//10列
		{ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},		//11列
	};
};

/*
		{ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},		//1列
		{ 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2},		//2列
		{ 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 2},		//3列
		{ 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2},		//4列
		{ 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2},		//5列
		{ 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2},		//6列
		{ 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2},		//7列
		{ 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2},		//8列
		{ 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2},		//9列
		{ 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2},		//10列
		{ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},		//11列

		
*/
